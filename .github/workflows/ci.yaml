name: Continuous Integration

on:
  pull_request:
  release:
    types: [published]
  push:
    branches: [master]

jobs:
  build:
    env:
      DOCKER_SERVER: docker.io
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_NAME: neuromation/base
      DOCKERFILE_PATH: targets/python37-jupyter-pytorch-tensorflow-jupyterlab/Dockerfile
    
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2

      ‐ name: Build image
        id: build
        uses: docker/build-action@v1
        with:
          repository: ${{ env.IMAGE_NAME }}
          tags: v1

      ‐ name: login
        uses: docker/login-action@v1
        with:
          registry: myregistry
          username: ${{ DOCKER_USERNAME }}
          password: ${{ DOCKER_PASSWORD }}

      ‐ name: Push master
        if: github.ref == 'refs/heads/master'
        uses: docker/push-action@v1
        with:
          registry: ${{ env.DOCKER_SERVER }}
          tags: master-$(date +%Y%m%d)-$GITHUB_RUN_NUMBER

      ‐ name: Push release
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/push-action@v1
        with:
          registry: ${{ env.DOCKER_SERVER }}
          tags: ${{ outputs.build.tags }}



      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: ${{ env.DOCKER_SERVER }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          image_name: ${{ env.IMAGE_NAME }}
          # image_tag: debug1
          # push_git_tag: true
          dockerfile: ${{ env.DOCKERFILE_PATH }}
          # push_image_and_stages: |
          #   make image_pip_list
            





      - name: DEBUG Test image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: ${{ env.DOCKER_SERVER }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          image_name: ${{ env.IMAGE_NAME }}
          push_image_and_stages: |
            make image_pip_list
            

      # - name: "Set up env vars: master branch"
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     echo ::set-env name=TAGS::"$(date +%Y%m%d).debug-$GITHUB_RUN_NUMBER"

      # - name: "Set up env vars: master branch"
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     echo ::set-env name=TAGS::"$(date +%Y%m%d).debug-$GITHUB_RUN_NUMBER"

      # - name: "Set up env vars: release tag"
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     echo ::set-env name=TAGS::"latest, ${GITHUB_REF#refs/tags/}"
     
      # - name: Push image
      #   run: |
      #     set -x
      #     docker login $DOCKER_SERVER --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          
      #     test "$TAGS"  # assert $TAGS not empty
      #     for tag in $(echo $TAGS | tr "," " ")
      #     do
      #       docker push $IMAGE_NAME:$tag
      #     done
