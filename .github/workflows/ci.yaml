name: CI

on:
  push:
    branches: [master]
    tags: [v*.*.*]
  pull_request:
    branches: [master]
  pull_request_target:
    branches: [master]

jobs:
  # https://github.community/t/how-to-limit-concurrent-workflow-runs/16844/16
  # We limit it, since our tests are runnig on GPU presets,
  #   if we fire several of them at the same time, it might lead to cluster-scaleup failures
  pre-ci:
    runs-on: ubuntu-latest
    steps:
      - name: 'Wait another CI run to complete'
        uses: beckermr/turnstyle-python@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    if: |
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    strategy:
      matrix:
        base-image:
          - nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04
          - nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu20.04
    env:
      IMAGE_NAME: neuromation/base
      NEURO_STAGING_URL: ${{ secrets.NEURO_STAGING_URL }}
      NEURO_TOKEN: ${{ secrets.NEURO_TOKEN }}
      BASE_IMAGE: ${{ matrix.base-image }}
    name: Build, test and publish image
    runs-on: ubuntu-latest
    needs: [pre-ci]
    timeout-minutes: 40
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -U neuro-cli

      - name: Configure environment
        run: |
          source venv/bin/activate
          neuro config login-with-token $NEURO_TOKEN $NEURO_STAGING_URL
          neuro config show

      - name: Login DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get image tags
        id: get-image-tags
        run: |
          if [[ ${{ matrix.base-image }} =~ runtime ]]; then
            export BASE_IMAGE_TYPE="runtime";
          elif [[ ${{ matrix.base-image }} =~ devel ]]; then
            export BASE_IMAGE_TYPE="devel";
          fi
          echo "::set-output name=BASE_IMAGE_TYPE::$BASE_IMAGE_TYPE"
          echo "::set-output name=platform_image_tag::neuromation/base:built-$BASE_IMAGE_TYPE"

      - name: Build image
        run: |
          make image_build

      - name: List pip packages
        run: |
          docker run --tty --rm ${{ steps.get-image-tags.outputs.platform_image_tag }} pip list

      - name: Test image
        env:
          BASE_IMAGE_TYPE: ${{ steps.get-image-tags.outputs.BASE_IMAGE_TYPE }}
        run: |
          source venv/bin/activate
          make e2e_neuro_push
          make test_dependencies

      - name: Push release
        env:
          BASE_IMAGE_TYPE: ${{ steps.get-image-tags.outputs.BASE_IMAGE_TYPE }}
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export TARGET_IMAGE_TAGS="latest-$BASE_IMAGE_TYPE,${GITHUB_REF#refs/tags/}-$BASE_IMAGE_TYPE";
          if [[ $BASE_IMAGE_TYPE == runtime ]]; then
            export TARGET_IMAGE_TAGS="latest,$TARGET_IMAGE_TAGS";
          fi
          make image_deploy
